version: '3.8'

services:
  google-photos-takeout:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: google-photos-takeout
    environment:
      # Backup Configuration
      - BACKUP_DESTINATION=/app/output
      - CONVERT_HEIC=${CONVERT_HEIC:-true}
      - JPEG_QUALITY=${JPEG_QUALITY:-95}
      - USE_HASH_DEDUPLICATION=${USE_HASH_DEDUPLICATION:-true}
      - PRESERVE_METADATA=${PRESERVE_METADATA:-true}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
      # Docker environment
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    
    volumes:
      # Input: Google Takeout ZIP files - modify this path to where you store downloads
      - ${TAKEOUT_INPUT_PATH:-./takeout-archives}:/app/input:ro
      
      # Output: Processed photos destination - modify this path to your NAS mount
      - ${BACKUP_DESTINATION:-/mnt/nas/google_photos_backup}:/app/output
      
      # Temporary processing space (needs disk space equal to largest ZIP)
      - ${TEMP_PATH:-/tmp/takeout-processing}:/app/temp
      
      # Configuration
      - ./.env:/app/.env:ro
    
    working_dir: /app
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '4.0'
        reservations:
          memory: 1G
          cpus: '1.0'
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Security context
    user: "1000:1000"
    
    # Network configuration
    networks:
      - takeout-network

networks:
  takeout-network:
    driver: bridge

# Example usage:
# 
# 1. Setup directories:
#    docker compose run --rm google-photos-takeout python setup_backup_dirs.py /app/output
# 
# 2. Process single ZIP file:
#    docker compose run --rm google-photos-takeout python main.py /app/input/takeout-001.zip --output /app/output
# 
# 3. Process all ZIP files in input directory:
#    docker compose run --rm google-photos-takeout python main.py /app/input --output /app/output
# 
# 4. Process with custom settings:
#    docker compose run --rm -e CONVERT_HEIC=false google-photos-takeout python main.py /app/input --output /app/output --no-convert-heic
# 
# 5. View processing logs:
#    docker compose logs google-photos-takeout
#
# Volume Configuration:
# Create a .env file with your paths:
# TAKEOUT_INPUT_PATH=/path/to/your/takeout-downloads
# BACKUP_DESTINATION=/path/to/your/nas/photos
# TEMP_PATH=/path/to/temp/processing