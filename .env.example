# Google Photos Backup Configuration Template
# Copy this file to .env and fill in your values

# ================================
# Google Photos API Configuration
# ================================
# Get these from Google Cloud Console:
# 1. Go to https://console.cloud.google.com/
# 2. Create a new project or select existing
# 3. Enable Google Photos Library API
# 4. Create OAuth 2.0 credentials (Desktop Application)
# 5. Download credentials.json file

GOOGLE_PHOTOS_CLIENT_ID=your_client_id_here
GOOGLE_PHOTOS_CLIENT_SECRET=your_client_secret_here

# ================================
# Backup Configuration
# ================================
# Path where photos will be backed up (modify for your NAS)
BACKUP_DESTINATION=/mnt/nas/google_photos_backup

# Convert HEIC files to JPEG (true/false)
CONVERT_HEIC=true

# JPEG quality for conversions (1-100, higher = better quality)
JPEG_QUALITY=95

# Maximum concurrent downloads (adjust based on bandwidth)
MAX_CONCURRENT_DOWNLOADS=5

# Download chunk size in bytes (8192 = 8KB)
CHUNK_SIZE=8192

# Retry attempts for failed downloads
RETRY_ATTEMPTS=3

# Retry delay in seconds
RETRY_DELAY=5

# ================================
# Deduplication Settings
# ================================
# Enable hash-based deduplication (true/false)
USE_HASH_DEDUPLICATION=true

# Hash algorithm for deduplication (sha256, md5, sha1)
HASH_ALGORITHM=sha256

# ================================
# Image Processing
# ================================
# Preserve original metadata (true/false)
PRESERVE_METADATA=true

# ================================
# Logging Configuration
# ================================
# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Optional: Log file path (leave empty for console only)
# LOG_FILE=/path/to/logfile.log

# ================================
# Authentication Files
# ================================
# Path to Google OAuth credentials file (download from Google Cloud Console)
CREDENTIALS_FILE=credentials.json

# Path to store authentication token (auto-generated)
TOKEN_FILE=token.json

# ================================
# Docker-specific Configuration
# ================================
# Uncomment and modify for Docker usage

# Host path to NAS mount (for Docker volume mapping)
# HOST_BACKUP_PATH=/mnt/nas/google_photos_backup

# Container user ID (should match your user ID)
# DOCKER_USER_ID=1000
# DOCKER_GROUP_ID=1000